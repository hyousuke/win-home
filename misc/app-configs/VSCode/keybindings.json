[
    // ========================================================================
    // のどかの EmacsMinimum keymap で定義している Emacs-like なキーバインドの
    // 影響を抑えるための設定
    //
    // (例) C-x C-f は Awesome Emacs Keymap で workbench.action.quickOpen
    //      に割り当てられているが、のどかが C-f を right に変換して VSCode
    //      に渡してしまうため C-x right(workbench.action.nextEditor) が
    //      実行されてしまう。そこで、C-x right に quickOpen をユーザー
    //      カスタマイズとして割り当てる。nextEditor の割り当ては上書き
    //      されてしまうが、ショートカットキーでの呼び出しを諦めるか、
    //      別のショートカットキーをアサインする。 
    {
        "key": "ctrl+x right",
        "command": "workbench.action.quickOpen",
        "when": "!terminalFocus"
    },


    // ========================================================================
    // AwesomeEmacsKeymap から不要なものを削除
    //

    // Sexp 関連のショートカットを削除
    {
        "key": "ctrl+alt+f",
        "command": "-emacs-mcx.paredit.forwardSexp",
        "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
    },
    {
        "key": "ctrl+alt+f",
        "command": "-emacs-mcx.paredit.forwardSexp",
        "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-emacs-mcx.paredit.backwardSexp",
        "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-emacs-mcx.paredit.backwardSexp",
        "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-emacs-mcx.paredit.backwardKillSexp",
        "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-emacs-mcx.paredit.backwardKillSexp",
        "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus"
    },
    {
        "key": "escape ctrl+backspace",
        "command": "-emacs-mcx.paredit.backwardKillSexp",
        "when": "config.emacs-mcx.useMetaPrefixEscape && editorTextFocus"
    },
    {
        "key": "ctrl+oem_4 ctrl+backspace",
        "command": "-emacs-mcx.paredit.backwardKillSexp",
        "when": "config.emacs-mcx.useMetaPrefixCtrlLeftBracket && editorTextFocus"
    },
    {
        "key": "escape ctrl+b",
        "command": "-emacs-mcx.paredit.backwardSexp",
        "when": "config.emacs-mcx.useMetaPrefixEscape && editorTextFocus"
    },
    {
        "key": "ctrl+oem_4 ctrl+b",
        "command": "-emacs-mcx.paredit.backwardSexp",
        "when": "config.emacs-mcx.useMetaPrefixCtrlLeftBracket && editorTextFocus"
    },
    {
        "key": "escape ctrl+f",
        "command": "-emacs-mcx.paredit.forwardSexp",
        "when": "config.emacs-mcx.useMetaPrefixEscape && editorTextFocus"
    },
    {
        "key": "ctrl+oem_4 ctrl+f",
        "command": "-emacs-mcx.paredit.forwardSexp",
        "when": "config.emacs-mcx.useMetaPrefixCtrlLeftBracket && editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-emacs-mcx.paredit.killSexp",
        "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-emacs-mcx.paredit.killSexp",
        "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus"
    },
    {
        "key": "escape ctrl+k",
        "command": "-emacs-mcx.paredit.killSexp",
        "when": "config.emacs-mcx.useMetaPrefixEscape && editorTextFocus"
    },
    {
        "key": "ctrl+oem_4 ctrl+k",
        "command": "-emacs-mcx.paredit.killSexp",
        "when": "config.emacs-mcx.useMetaPrefixCtrlLeftBracket && editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+2",
        "command": "-emacs-mcx.paredit.markSexp",
        "when": "editorTextFocus && !config.emacs-mcx.useMetaPrefixMacCmd"
    },
    {
        "key": "ctrl+shift+alt+2",
        "command": "-emacs-mcx.paredit.markSexp",
        "when": "config.emacs-mcx.useMetaPrefixMacCmd && editorTextFocus"
    },
    {
        "key": "escape ctrl+shift+2",
        "command": "-emacs-mcx.paredit.markSexp",
        "when": "config.emacs-mcx.useMetaPrefixEscape && editorTextFocus"
    },
    {
        "key": "ctrl+oem_4 ctrl+shift+2",
        "command": "-emacs-mcx.paredit.markSexp",
        "when": "config.emacs-mcx.useMetaPrefixCtrlLeftBracket && editorTextFocus"
    },

    // ========================================================================
    // その他
    //
    
    // C-. を QuickFix から nextEditor に変更。QuickFix は C-A-. に割り当てる。
    {
        "key": "ctrl+oem_period",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+alt+oem_period",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+oem_period",
        "command": "workbench.action.terminal.showQuickFixes",
        "when": "terminalFocus"
    },

    // C-, を openSettings から previousEditor に変更。openSetting は C-A-, に割り当てる。
    {
        "key": "ctrl+oem_comma",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+alt+oem_comma",
        "command": "workbench.action.openSettings"
    },


]